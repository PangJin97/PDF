팀플 진행 방법 

##팀플을 할때는 크게 clone, fork 두 가지 방식으로 나뉘어짐. 
3~5인 정도라면 clone이 낫다는 강사님의 개인적 견해로 우리는
clone 사용

1. 팀장님 기본 프로젝트 세팅 
 1-1. 팀장이 팀 프로젝트 생성 
 1-2. 프로젝트 파일구조 기본 생성 
 1-3 remote repository 생성(레포지토리명은 프로젝트 명과 동일)

1-4 git init
1-5 git branch -m main
1-6 git add  (lf 경고뜨면... git config core.autocrlf true)
1-7 git commit -m "커밋 메세지 상세히"
1-8 git remote add origin 원격 저장소url 
1-9 git push oirgin main 
1-10 git branch dev 
1-11 git checkout dev
1-12 git push origin dev 
1-13 default branch를 main에서 dev브랜츠로 변경(settings에 있음)


2. 팀장이 팀원들을 초대하기(fork방식을 할 필요 없다)

2-1 팀장이 settings -> collaborator에서 팀원들 초대
2-2 팀원은 이메일을 확인해서 초대에 응함.


3. 팀원들이 팀장이 올린 프로젝트 내려받음 

3-1 프로젝트 내려받기(dev 브랜치만 내려받기)
 git clone -b dev 팀장의 원격 저장소 url

3-2 작업할 브렌치를 각자 생성 
git branch 브랜치 명

3-3 각자 작업할 브랜치로 이동
git checkout 브랜치 명 

3-4 작업시작 

3-5 작업 내용 staging
git add .

3-6. 작업 내용 commit
 git commit -m "커밋할 메세지"

==> push하기전에 내려받은 코드 확인
       :dev 브랜치로 이동 : git checkout dev
       :pull 명령어 실행 : git pull origin dev	
       
	=> 내려받은 파일이 있을 때 vs 내려받은 파일이 없을때
	->1. 내려받은 파일이 없을떄
	개인 브렌치로 이동해서 3~8진행  
	 : git checkout  개인 브랜치
	
	=>내려 받은 파일이 있을때는
	->2.개인브랜치도 최신화 시켜준다. 
	(개인 브랜치로 이동 + merge)
             3.8부터 진행 


3-7 github에 올리기
 git push origin 개인이 작업한 브랜치 

3-8 github 사이트에서 pull request(PR)

3-9. 최소 한명은 확인 

3-10. merge pull reqeust(본인이) -> 이거하면 알아서 merge 됨

3-11. 브랜치 삭제(버튼 누르면 삭제)

3 -12 dev 브렌치 코드를 최신화
git pull origin dev(이 명령어는 반드시 dev 프란치에서 실행)

이 과정이 끝나면 3-2 ~ 3-13반복


**** 어떤 과정에 있던지 무조건 pull받고 진행****
상황1. 코드를 작성중 pr 왔다. 
      2 지금까지 하던 내용을 commit한다 .
      3. dev 브랜치로 이동 
      4. dev 브랜치를 pull를 받는다.
      5.  개인브랜치(작업중이던 브랜치)에 dev브랜치를 merge한다. 
            -> git checkout 개인 브랜치
                git merge dev 
         작업을 이어간다



3-8 dev에 내가 작업한 브랜치 병합

3-9 내가 작업한 브랜치 삭제(3-8 ~ 3-9는 깃허브에서 해결 가능)